{"version":3,"sources":["components/TransactionsList.js","components/Search.js","components/AddTransactionForm.js","components/AccountContainer.js","components/App.js","index.js"],"names":["TransactionsList","_ref","transactions","onDelete","onSort","handleSort","sortBy","_jsxs","className","children","_jsx","onClick","map","transaction","date","description","category","amount","handleDelete","id","Search","handleSearch","type","placeholder","onChange","AddTransactionForm","setDate","useState","setDescription","setCategory","setAmount","onSubmit","e","fetch","method","headers","body","JSON","stringify","alert","value","target","name","step","AccountContainer","setTransactions","query","setQuery","useEffect","concat","then","resp","json","data","catch","error","console","onAddTransaction","updatedTransactions","filter","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0931740a.chunk.js","sourcesContent":["// import React from \"react\";\n// import Transaction from \"./Transaction\";\n\n// function TransactionsList({ transactions, onDelete, onSort }) {\n//   // Function to handle sorting\n//   const handleSort = (sortBy) => {\n//     // onSort(sortBy);\n//   };\n\n//   // Function to handle deletion\n//   const handleDelete = (id) => {\n//     onDelete(id);\n//   };\n\n//   return (\n//     <table className=\"ui celled striped padded table\">\n//       <thead>\n//         <tr>\n//           <th>\n//             <button onClick={() => handleSort(\"date\")}>Date</button>\n//           </th>\n//           <th>\n//             <button onClick={() => handleSort(\"description\")}>Description</button>\n//           </th>\n//           <th>\n//             <button onClick={() => handleSort(\"category\")}>Category</button>\n//           </th>\n//           <th>\n//             <button onClick={() => handleSort(\"amount\")}>Amount</button>\n//           </th>\n//           <th>Actions</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {transactions.map((transaction) => (\n//           <tr key={transaction.id}>\n//             <td>{transaction.date}</td>\n//             <td>{transaction.description}</td>\n//             <td>{transaction.category}</td>\n//             <td>{transaction.amount}</td>\n//             <td>\n//               <button onClick={() => handleDelete(transaction.id)}>Delete</button>\n//             </td>\n//           </tr>\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// }\n\n// export default TransactionsList;\n\n\nimport React from \"react\";\n\nfunction TransactionsList({ transactions, onDelete, onSort }) {\n  const handleSort = (sortBy) => {\n    onSort(sortBy);\n  };\n\n  const handleDelete = (id) => {\n    onDelete(id);\n  };\n\n  return (\n    <table className=\"ui celled striped padded table\">\n      <thead>\n        <tr>\n          <th>\n            <button onClick={() => handleSort(\"date\")}>Date</button>\n          </th>\n          <th>\n            <button onClick={() => handleSort(\"description\")}>Description</button>\n          </th>\n          <th>\n            <button onClick={() => handleSort(\"category\")}>Category</button>\n          </th>\n          <th>\n            <button onClick={() => handleSort(\"amount\")}>Amount</button>\n          </th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions.map((transaction) => (\n          <tr key={transaction.id}>\n            <td>{transaction.date}</td>\n            <td>{transaction.description}</td>\n            <td>{transaction.category}</td>\n            <td>{transaction.amount}</td>\n            <td>\n              <button onClick={() => handleDelete(transaction.id)}>Delete</button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default TransactionsList;","import React from \"react\";\n\nfunction Search({handleSearch}) {\n  return (\n    <div className=\"ui large fluid icon input\">\n      <input\n        type=\"text\"\n        placeholder=\"Search your Recent Transactions\"\n        onChange={handleSearch}\n      />\n      <i className=\"circular search link icon\"></i>\n    </div>\n  );\n}\n\nexport default Search;\n\n","import React, { useState } from \"react\";\n\nfunction AddTransactionForm() {\n  const [date, setDate] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [category, setCategory] = useState(\"\")\n  const [amount, setAmount] = useState(\"\")\n  \n  function handleSubmit(e) {\n    fetch(\"https://bank-of-flatiron-code-challenge-3.onrender.com/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: date,\n        description: description,\n        category: category,\n        amount: amount,\n      }),\n    });\n     alert(\"added successfully\")\n  }\n  return (\n    <div className=\"ui segment\">\n      <form onSubmit={handleSubmit} className=\"ui form\">\n        <div className=\"inline fields\">\n          <input value={date} onChange={(e) => setDate(e.target.value)} type=\"date\" name=\"date\" />\n          <input value={description} onChange={(e) => setDescription(e.target.value)} type=\"text\" name=\"description\" placeholder=\"Description\" />\n          <input value={category} onChange={(e) => setCategory(e.target.value)} type=\"text\" name=\"category\" placeholder=\"Category\" />\n          <input value={amount} onChange={(e) => setAmount(e.target.value)} type=\"number\" name=\"amount\" placeholder=\"Amount\" step=\"0.01\" />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;\n","// import React, { useEffect, useState } from \"react\";\n// import TransactionsList from \"./TransactionsList\";\n// import Search from \"./Search\";\n// import AddTransactionForm from \"./AddTransactionForm\";\n\n// function AccountContainer() {\n//   const [transaction, setTransaction] = useState([])\n//   const [query, setQuery] = useState(\"\")\n//   useEffect(() => {\n//     fetch(\"https://bank-of-flatiron-code-challenge-3.onrender.com/transactions?q=\" + query)\n//       .then((resp) => resp.json())\n//       .then(transaction => setTransaction(transaction))\n//   }, [query])\n\n//   function handleSearch(e) {\n//     setQuery(e.target.value)\n//   }\n//   return (\n//     <div>\n//       <Search handleSearch={handleSearch} />\n//       <AddTransactionForm />\n//       <TransactionsList transactions={transaction} />\n//       {/* <TransactionsList onDelete={onDelete} /> */}\n//     </div>\n//   );\n// }\n\n// export default AccountContainer;\n\nimport React, { useEffect, useState } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  const [transactions, setTransactions] = useState([]);\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    fetch(`https://bank-of-flatiron-code-challenge-3.onrender.com/transactions?q=${query}`)\n      .then((resp) => resp.json())\n      .then((data) => setTransactions(data))\n      .catch((error) => console.error(\"Error fetching data: \", error));\n  }, [query]);\n\n  const handleSearch = (e) => {\n    setQuery(e.target.value);\n  };\n\n  const handleDelete = (id) => {\n    const updatedTransactions = transactions.filter(transaction => transaction.id !== id);\n    setTransactions(updatedTransactions);\n  };\n\n  const handleSort = (sortBy) => {\n    fetch(`https://bank-of-flatiron-code-challenge-3.onrender.com/transactions?sortBy=${sortBy}`)\n      .then((resp) => resp.json())\n      .then((data) => setTransactions(data))\n      .catch((error) => console.error(\"Error fetching sorted data: \", error));\n  };\n\n  const handleAddTransaction = (transaction) => {\n    setTransactions([...transactions, transaction])\n  };\n\n  return (\n    <div>\n      <Search handleSearch={handleSearch} />\n      <AddTransactionForm onAddTransaction={handleAddTransaction} />\n      <TransactionsList\n        transactions={transactions}\n        onDelete={handleDelete}\n        onSort={handleSort}\n      />\n    </div>\n  );\n}\n\nexport default AccountContainer;","import React from \"react\";\nimport AccountContainer from \"./AccountContainer\";\n\nfunction App() {\n  return (\n    <div className=\"ui raised segment\">\n      <div className=\"ui segment violet inverted\">\n        <h2>The Royal Bank of Flatiron</h2>\n      </div>\n      <AccountContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}