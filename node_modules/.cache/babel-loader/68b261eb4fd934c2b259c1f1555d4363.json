{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import TransactionsList from \"./TransactionsList\";\n// import Search from \"./Search\";\n// import AddTransactionForm from \"./AddTransactionForm\";\n// function AccountContainer() {\n//   const [transaction, setTransaction] = useState([])\n//   const [query, setQuery] = useState(\"\")\n//   useEffect(() => {\n//     fetch(\"https://bank-of-flatiron-code-challenge-3.onrender.com/transactions?q=\" + query)\n//       .then((resp) => resp.json())\n//       .then(transaction => setTransaction(transaction))\n//   }, [query])\n//   function handleSearch(e) {\n//     setQuery(e.target.value)\n//   }\n//   return (\n//     <div>\n//       <Search handleSearch={handleSearch} />\n//       <AddTransactionForm />\n//       <TransactionsList transactions={transaction} />\n//       {/* <TransactionsList onDelete={onDelete} /> */}\n//     </div>\n//   );\n// }\n// export default AccountContainer;\nimport React,{useEffect,useState}from\"react\";import TransactionsList from\"./TransactionsList\";import Search from\"./Search\";import AddTransactionForm from\"./AddTransactionForm\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AccountContainer(){const[transactions,setTransactions]=useState([]);const[query,setQuery]=useState(\"\");useEffect(()=>{fetch(\"https://bank-of-flatiron-code-challenge-3.onrender.com/transactions?q=\".concat(query)).then(resp=>resp.json()).then(data=>setTransactions(data)).catch(error=>console.error(\"Error fetching data: \",error));},[query]);const handleSearch=e=>{setQuery(e.target.value);};const handleDelete=id=>{const updatedTransactions=transactions.filter(transaction=>transaction.id!==id);setTransactions(updatedTransactions);};const handleSort=sortBy=>{fetch(\"https://bank-of-flatiron-code-challenge-3.onrender.com/transactions?sortBy=\".concat(sortBy)).then(resp=>resp.json()).then(data=>setTransactions(data)).catch(error=>console.error(\"Error fetching sorted data: \",error));};const handleAddTransaction=transaction=>{setTransactions([...transactions,transaction]);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Search,{handleSearch:handleSearch}),/*#__PURE__*/_jsx(AddTransactionForm,{onAddTransaction:handleAddTransaction}),/*#__PURE__*/_jsx(TransactionsList,{transactions:transactions,onDelete:handleDelete,onSort:handleSort})]});}export default AccountContainer;","map":{"version":3,"names":["React","useEffect","useState","TransactionsList","Search","AddTransactionForm","jsx","_jsx","jsxs","_jsxs","AccountContainer","transactions","setTransactions","query","setQuery","fetch","concat","then","resp","json","data","catch","error","console","handleSearch","e","target","value","handleDelete","id","updatedTransactions","filter","transaction","handleSort","sortBy","handleAddTransaction","children","onAddTransaction","onDelete","onSort"],"sources":["/home/wkariuki/Development/code/phase-2/Bank-of-flatiron-code-challenge/src/components/AccountContainer.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import TransactionsList from \"./TransactionsList\";\n// import Search from \"./Search\";\n// import AddTransactionForm from \"./AddTransactionForm\";\n\n// function AccountContainer() {\n//   const [transaction, setTransaction] = useState([])\n//   const [query, setQuery] = useState(\"\")\n//   useEffect(() => {\n//     fetch(\"https://bank-of-flatiron-code-challenge-3.onrender.com/transactions?q=\" + query)\n//       .then((resp) => resp.json())\n//       .then(transaction => setTransaction(transaction))\n//   }, [query])\n\n//   function handleSearch(e) {\n//     setQuery(e.target.value)\n//   }\n//   return (\n//     <div>\n//       <Search handleSearch={handleSearch} />\n//       <AddTransactionForm />\n//       <TransactionsList transactions={transaction} />\n//       {/* <TransactionsList onDelete={onDelete} /> */}\n//     </div>\n//   );\n// }\n\n// export default AccountContainer;\n\nimport React, { useEffect, useState } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  const [transactions, setTransactions] = useState([]);\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    fetch(`https://bank-of-flatiron-code-challenge-3.onrender.com/transactions?q=${query}`)\n      .then((resp) => resp.json())\n      .then((data) => setTransactions(data))\n      .catch((error) => console.error(\"Error fetching data: \", error));\n  }, [query]);\n\n  const handleSearch = (e) => {\n    setQuery(e.target.value);\n  };\n\n  const handleDelete = (id) => {\n    const updatedTransactions = transactions.filter(transaction => transaction.id !== id);\n    setTransactions(updatedTransactions);\n  };\n\n  const handleSort = (sortBy) => {\n    fetch(`https://bank-of-flatiron-code-challenge-3.onrender.com/transactions?sortBy=${sortBy}`)\n      .then((resp) => resp.json())\n      .then((data) => setTransactions(data))\n      .catch((error) => console.error(\"Error fetching sorted data: \", error));\n  };\n\n  const handleAddTransaction = (transaction) => {\n    setTransactions([...transactions, transaction])\n  };\n\n  return (\n    <div>\n      <Search handleSearch={handleSearch} />\n      <AddTransactionForm onAddTransaction={handleAddTransaction} />\n      <TransactionsList\n        transactions={transactions}\n        onDelete={handleDelete}\n        onSort={handleSort}\n      />\n    </div>\n  );\n}\n\nexport default AccountContainer;"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,gBAAgB,KAAM,oBAAoB,CACjD,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,MAAO,CAAAC,kBAAkB,KAAM,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtD,QAAS,CAAAC,gBAAgBA,CAAA,CAAG,CAC1B,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAEtCD,SAAS,CAAC,IAAM,CACdc,KAAK,0EAAAC,MAAA,CAA0EH,KAAK,CAAE,CAAC,CACpFI,IAAI,CAAEC,IAAI,EAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BF,IAAI,CAAEG,IAAI,EAAKR,eAAe,CAACQ,IAAI,CAAC,CAAC,CACrCC,KAAK,CAAEC,KAAK,EAAKC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAAC,CACpE,CAAC,CAAE,CAACT,KAAK,CAAC,CAAC,CAEX,KAAM,CAAAW,YAAY,CAAIC,CAAC,EAAK,CAC1BX,QAAQ,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC1B,CAAC,CAED,KAAM,CAAAC,YAAY,CAAIC,EAAE,EAAK,CAC3B,KAAM,CAAAC,mBAAmB,CAAGnB,YAAY,CAACoB,MAAM,CAACC,WAAW,EAAIA,WAAW,CAACH,EAAE,GAAKA,EAAE,CAAC,CACrFjB,eAAe,CAACkB,mBAAmB,CAAC,CACtC,CAAC,CAED,KAAM,CAAAG,UAAU,CAAIC,MAAM,EAAK,CAC7BnB,KAAK,+EAAAC,MAAA,CAA+EkB,MAAM,CAAE,CAAC,CAC1FjB,IAAI,CAAEC,IAAI,EAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BF,IAAI,CAAEG,IAAI,EAAKR,eAAe,CAACQ,IAAI,CAAC,CAAC,CACrCC,KAAK,CAAEC,KAAK,EAAKC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CAAC,CAC3E,CAAC,CAED,KAAM,CAAAa,oBAAoB,CAAIH,WAAW,EAAK,CAC5CpB,eAAe,CAAC,CAAC,GAAGD,YAAY,CAAEqB,WAAW,CAAC,CAAC,CACjD,CAAC,CAED,mBACEvB,KAAA,QAAA2B,QAAA,eACE7B,IAAA,CAACH,MAAM,EAACoB,YAAY,CAAEA,YAAa,CAAE,CAAC,cACtCjB,IAAA,CAACF,kBAAkB,EAACgC,gBAAgB,CAAEF,oBAAqB,CAAE,CAAC,cAC9D5B,IAAA,CAACJ,gBAAgB,EACfQ,YAAY,CAAEA,YAAa,CAC3B2B,QAAQ,CAAEV,YAAa,CACvBW,MAAM,CAAEN,UAAW,CACpB,CAAC,EACC,CAAC,CAEV,CAEA,cAAe,CAAAvB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module"}