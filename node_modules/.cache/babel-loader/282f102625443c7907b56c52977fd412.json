{"ast":null,"code":"var _jsxFileName = \"/home/wkariuki/Development/code/phase-2/Bank-of-flatiron-code-challenge/src/components/AccountContainer.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import TransactionsList from \"./TransactionsList\";\n// import Search from \"./Search\";\n// import AddTransactionForm from \"./AddTransactionForm\";\n\n// function AccountContainer() {\n//   const [transaction, setTransaction] = useState([])\n//   const [query, setQuery] = useState(\"\")\n//   useEffect(() => {\n//     fetch(\"https://bank-of-flatiron-code-challenge-3.onrender.com/transactions?q=\" + query)\n//       .then((resp) => resp.json())\n//       .then(transaction => setTransaction(transaction))\n//   }, [query])\n\n//   function handleSearch(e) {\n//     setQuery(e.target.value)\n//   }\n//   return (\n//     <div>\n//       <Search handleSearch={handleSearch} />\n//       <AddTransactionForm />\n//       <TransactionsList transactions={transaction} />\n//       {/* <TransactionsList onDelete={onDelete} /> */}\n//     </div>\n//   );\n// }\n\n// export default AccountContainer;\n\nimport React, { useEffect, useState } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountContainer() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  useEffect(() => {\n    fetch(`http://localhost:8001/transactions?q=${query}`).then(resp => resp.json()).then(data => setTransactions(data)).catch(error => console.error(\"Error fetching data: \", error));\n  }, [query]);\n  const handleSearch = e => {\n    setQuery(e.target.value);\n  };\n  const handleDelete = id => {\n    const updatedTransactions = transactions.filter(transaction => transaction.id !== id);\n    setTransactions(updatedTransactions);\n  };\n  const handleSort = sortBy => {\n    fetch(`http://localhost:8001/transactions?sortBy=${sortBy}`).then(resp => resp.json()).then(data => setTransactions(data)).catch(error => console.error(\"Error fetching sorted data: \", error));\n  };\n  const handleAddTransaction = transaction => {\n    setTransactions([...transactions, transaction]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n      onAddTransaction: handleAddTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsList, {\n      transactions: transactions,\n      onDelete: handleDelete,\n      onSort: handleSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(AccountContainer, \"bbyo2noKzR87TknOUBQrVFBuEtQ=\");\n_c = AccountContainer;\nexport default AccountContainer;\nvar _c;\n$RefreshReg$(_c, \"AccountContainer\");","map":{"version":3,"names":["React","useEffect","useState","TransactionsList","Search","AddTransactionForm","jsxDEV","_jsxDEV","AccountContainer","_s","transactions","setTransactions","query","setQuery","fetch","then","resp","json","data","catch","error","console","handleSearch","e","target","value","handleDelete","id","updatedTransactions","filter","transaction","handleSort","sortBy","handleAddTransaction","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddTransaction","onDelete","onSort","_c","$RefreshReg$"],"sources":["/home/wkariuki/Development/code/phase-2/Bank-of-flatiron-code-challenge/src/components/AccountContainer.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import TransactionsList from \"./TransactionsList\";\n// import Search from \"./Search\";\n// import AddTransactionForm from \"./AddTransactionForm\";\n\n// function AccountContainer() {\n//   const [transaction, setTransaction] = useState([])\n//   const [query, setQuery] = useState(\"\")\n//   useEffect(() => {\n//     fetch(\"https://bank-of-flatiron-code-challenge-3.onrender.com/transactions?q=\" + query)\n//       .then((resp) => resp.json())\n//       .then(transaction => setTransaction(transaction))\n//   }, [query])\n\n//   function handleSearch(e) {\n//     setQuery(e.target.value)\n//   }\n//   return (\n//     <div>\n//       <Search handleSearch={handleSearch} />\n//       <AddTransactionForm />\n//       <TransactionsList transactions={transaction} />\n//       {/* <TransactionsList onDelete={onDelete} /> */}\n//     </div>\n//   );\n// }\n\n// export default AccountContainer;\n\nimport React, { useEffect, useState } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  const [transactions, setTransactions] = useState([]);\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    fetch(`http://localhost:8001/transactions?q=${query}`)\n      .then((resp) => resp.json())\n      .then((data) => setTransactions(data))\n      .catch((error) => console.error(\"Error fetching data: \", error));\n  }, [query]);\n\n  const handleSearch = (e) => {\n    setQuery(e.target.value);\n  };\n\n  const handleDelete = (id) => {\n    const updatedTransactions = transactions.filter(transaction => transaction.id !== id);\n    setTransactions(updatedTransactions);\n  };\n\n  const handleSort = (sortBy) => {\n    fetch(`http://localhost:8001/transactions?sortBy=${sortBy}`)\n      .then((resp) => resp.json())\n      .then((data) => setTransactions(data))\n      .catch((error) => console.error(\"Error fetching sorted data: \", error));\n  };\n\n  const handleAddTransaction = (transaction) => {\n    setTransactions([...transactions, transaction])\n  };\n\n  return (\n    <div>\n      <Search handleSearch={handleSearch} />\n      <AddTransactionForm onAddTransaction={handleAddTransaction} />\n      <TransactionsList\n        transactions={transactions}\n        onDelete={handleDelete}\n        onSort={handleSort}\n      />\n    </div>\n  );\n}\n\nexport default AccountContainer;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACda,KAAK,CAAE,wCAAuCF,KAAM,EAAC,CAAC,CACnDG,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BF,IAAI,CAAEG,IAAI,IAAKP,eAAe,CAACO,IAAI,CAAC,CAAC,CACrCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EACpE,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;EAEX,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1BV,QAAQ,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,YAAY,GAAIC,EAAE,IAAK;IAC3B,MAAMC,mBAAmB,GAAGlB,YAAY,CAACmB,MAAM,CAACC,WAAW,IAAIA,WAAW,CAACH,EAAE,KAAKA,EAAE,CAAC;IACrFhB,eAAe,CAACiB,mBAAmB,CAAC;EACtC,CAAC;EAED,MAAMG,UAAU,GAAIC,MAAM,IAAK;IAC7BlB,KAAK,CAAE,6CAA4CkB,MAAO,EAAC,CAAC,CACzDjB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BF,IAAI,CAAEG,IAAI,IAAKP,eAAe,CAACO,IAAI,CAAC,CAAC,CACrCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC;EAC3E,CAAC;EAED,MAAMa,oBAAoB,GAAIH,WAAW,IAAK;IAC5CnB,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEoB,WAAW,CAAC,CAAC;EACjD,CAAC;EAED,oBACEvB,OAAA;IAAA2B,QAAA,gBACE3B,OAAA,CAACH,MAAM;MAACkB,YAAY,EAAEA;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtC/B,OAAA,CAACF,kBAAkB;MAACkC,gBAAgB,EAAEN;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9D/B,OAAA,CAACJ,gBAAgB;MACfO,YAAY,EAAEA,YAAa;MAC3B8B,QAAQ,EAAEd,YAAa;MACvBe,MAAM,EAAEV;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC7B,EAAA,CA1CQD,gBAAgB;AAAAkC,EAAA,GAAhBlC,gBAAgB;AA4CzB,eAAeA,gBAAgB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}